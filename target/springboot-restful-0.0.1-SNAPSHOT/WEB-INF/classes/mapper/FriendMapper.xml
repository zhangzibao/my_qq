<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.my_qq.dao.FriendMapper">
    <resultMap id="BaseResultMap" type="com.springboot.my_qq.model.Friend">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="friend_id" property="friendId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="UserResultMap" type="com.springboot.my_qq.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="u_avatar" property="uAvatar" jdbcType="VARCHAR"/>
        <result column="u_birthday" property="uBirthday" jdbcType="VARCHAR"/>
        <result column="u_name" property="uName" jdbcType="VARCHAR"/>
        <result column="u_gender" property="uGender" jdbcType="VARCHAR"/>
        <result column="u_email" property="uEmail" jdbcType="VARCHAR"/>
        <result column="u_phone" property="uPhone" jdbcType="INTEGER"/>
        <result column="u_address" property="uAddress" jdbcType="VARCHAR"/>
        <result column="u_autograph" property="uAutograph" jdbcType="VARCHAR"/>
        <result column="u_about" property="uAbout" jdbcType="VARCHAR"/>
        <result column="nick_name" property="Nickname" jdbcType="VARCHAR"/>
        <result column="open_id" property="OpenId" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="getAllFreinds" resultMap="UserResultMap" parameterType="java.lang.Integer">
        select user.*
        from user,
             friends
        where friends.user_id = #{id,jdbcType=INTEGER}
          and user.id = friends.friend_id
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from friends
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from friends
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.springboot.my_qq.model.Friend">
        insert into friends (id, user_id, friend_id)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{friendId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.springboot.my_qq.model.Friend">
        insert into friends
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="friendId != null">
                friend_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendId != null">
                #{friendId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.springboot.my_qq.model.Friend">
        update friends
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendId != null">
                friend_id = #{friendId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.springboot.my_qq.model.Friend">
        update friends
        set user_id = #{userId,jdbcType=INTEGER},
        friend_id = #{friendId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
